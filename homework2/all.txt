/******************* "src\web\ExamGradeServlet.java" ********************/

package web;

import tools.AnsProcess;
import tools.SaveAndLoad;
import tools.Student;
import tools.HTML;
import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.annotation.*;

import java.io.IOException;
import java.io.PrintWriter;

/*
 * 判题，出分
 */
@WebServlet("/check")
public class ExamGradeServlet extends HttpServlet {
    @Override
    public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        request.setCharacterEncoding("utf-8");
        response.setContentType("text/html;charset=UTF-8");
        var ans = request.getParameterMap();
        PrintWriter out = response.getWriter();
        var stu = new Student(ans.get("name")[0], ans.get("num")[0],
                4 * AnsProcess.correctNumbers(ans, SaveAndLoad.load()));
        Student.students.remove(stu);
        Student.students.add(stu);
        String body = "<h1>考试成绩</h1>学号:%s<br>姓名:%s<br>成绩:%d<br><a href=index.html>返回主页</a>".formatted(stu.num, stu.name,
                stu.grade);
        body = HTML.div(body, "box", "", "margin:20% 33% auto;padding:20%;width:30%;");
        out.println(HTML.html("成绩", body));
    }
}
/******************* "src\web\GradeTable.java" ********************/

package web;

import tools.Student;
import tools.HTML;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/*
 * 学生成绩表
 */
@WebServlet("/grade_table")
public class GradeTable extends HttpServlet {
    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        resp.setContentType("text/html;charset=UTF-8");
        var out = resp.getWriter();
        List<Object[]> table = new ArrayList<>();
        Student.students.forEach(stu -> table.add(stu.toArray()));
        out.println(HTML.html("成绩总表", HTML.div("<h1 style='border-bottom: #89898966 solid 1px;'>成绩总表</h1>" +
                HTML.toTable(new Object[] { "学号", "姓名", "成绩" }, table, ""), "box", "",
                "margin-top:10%;text-align:center;padding:20%;width:90%;background-color:rgba(20, 21, 22, 0.8);color:white;")));
    }
}

/******************* "src\web\Login.java" ********************/

package web;

import tools.HTML;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.PrintWriter;

/*
 * 两个登录界面的基
 */
class Login extends HttpServlet {
    String url;

    protected Login(String url) {
        super();
        this.url = url;
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        if (request.getParameter("username").equals("admin") && request.getParameter("password").equals("admin")) {
            response.sendRedirect(url);
        } else {
            response.setContentType("text/html;charset=UTF-8");
            PrintWriter out = response.getWriter();
            out.println(HTML.html("登录失败",
                    HTML.div("<h1>登录失败</h1><p>登录失败，点击<a href='index.html'>返回主页<a></p>", "box", "",
                            "width:50%;height:50%;margin:0 auto;margin-top:10%")));
        }
    }
}

/******************* "src\web\LoginBeforeSave.java" ********************/

package web;

import javax.servlet.annotation.WebServlet;

@WebServlet("/login_save")
public class LoginBeforeSave extends Login {
    public LoginBeforeSave() {
        super("save.html");
    }
}

/******************* "src\web\LoginBeforeTable.java" ********************/

package web;

import javax.servlet.annotation.WebServlet;

@WebServlet("/login_grade")
public class LoginBeforeTable extends Login {
    public LoginBeforeTable() {
        super("grade_table");
    }
}

/******************* "src\web\SaveServlet.java" ********************/

package web;

import tools.SaveAndLoad;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.PrintWriter;

/*
 * 保存
 */
@WebServlet("/save")
public class SaveServlet extends HttpServlet {
    @Override
    public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        request.setCharacterEncoding("utf-8");
        response.setContentType("text/html;charset=UTF-8");
        var ans = request.getParameterMap();
        PrintWriter out = response.getWriter();
        out.println("<body>");
        out.println((SaveAndLoad.save(ans) ? "保存成功" : "保存失败") + "<br>3秒后跳转回主页");
        out.println("<script>\nfunction jump(){window.location.href='index.html';}\nsetTimeout(jump,3000);\n</script>");
        out.println("</body>");
    }
}

/******************* "src\tools\AnsProcess.java" ********************/

package tools;

import java.util.*;
import java.util.concurrent.atomic.AtomicInteger;

/*
 * 处理答案输入，包括录入的答案和学生的回答
 */
public class AnsProcess {
    static String modify(String s) {
        return s.replaceAll(" ", "")
                .replaceAll("\r", "")
                .replaceAll("\n", "")
                .replaceAll("\t", "");
    }

    /*
     * 两集合相等
     */
    public static boolean setEquals(Set<String> set1, Set<String> set2) {
        if (set1 == null || set2 == null)
            return false;
        if (set1.size() != set2.size())
            return false;
        return set1.containsAll(set2);
    }

    public static Map<String, Object> modifyBeforeSave(Map<String, String[]> mp) {
        Map<String, Object> ans = new HashMap<>();
        mp.forEach((key, val) -> {
            var kind = key.split("_")[0];
            switch (kind) {
                case "single-section", "judgement" -> ans.put(key, val[0]);
                case "multi-section" -> ans.put(key, new HashSet<>(Arrays.asList(val)));
                case "blank" -> ans.put(key, modify(val[0]));
                case "quiz" -> ans.put(key, modify(val[0]).split(";"));
            }
        });
        return ans;
    }

    /// 做对的题数
    public static int correctNumbers(Map<String, String[]> mp, Map<String, Object> ans) {
        AtomicInteger ret = new AtomicInteger();
        for (Map.Entry<String, String[]> entry : mp.entrySet()) {
            String key = entry.getKey();
            String[] val = entry.getValue();
            var kind = key.split("_")[0];
            switch (kind) {
                case "single-section", "judgement" -> {
                    if (val[0].equals(ans.get(key))) {
                        ret.addAndGet(1);
                        // System.out.println(key);
                    }
                }
                case "multi-section" -> {
                    if (setEquals(new HashSet<>(Arrays.asList(val)), (Set<String>) ans.get(key))) {
                        ret.addAndGet(1);
                        // System.out.println(key);
                    }
                }
                case "blank" -> {
                    if (modify(val[0]).equals(ans.get(key))) {
                        ret.addAndGet(1);
                        // System.out.println(key);
                    }
                }
                case "quiz" -> {
                    int flag = 1;
                    for (String keyword : (String[]) ans.getOrDefault(key,new String[0])) {
                        if (!val[0].contains(keyword)) {
                            flag = 0;
                            break;
                        }
                    }
                    /*if (flag == 1) {
                        // System.out.println(key);
                    }*/
                    ret.addAndGet(flag);
                }
            }
        }
        return ret.get();
    }
}

/******************* "src\tools\HTML.java" ********************/

package tools;

import java.util.List;

/*工具包，主要用于快速生成html字符串 */
public class HTML {
    private static String toRows(List<Object[]> lst) {
        StringBuilder ret = new StringBuilder();
        for (Object[] row : lst) {
            ret.append("<tr>");
            for (Object obj : row) {
                ret.append("<td>").append(obj.toString()).append("</td>");
            }
            ret.append("</tr>");
        }
        ret.append("</table>");
        return ret.toString();
    }

    static public String toTable(Object[] head, List<Object[]> lst, String class_) {
        StringBuilder ret = new StringBuilder("<table class='" + class_ + "' style='margin:auto;width:100%;'>");
        ret.append("<tr>");
        for (Object obj : head) {
            ret.append("<th>").append(obj.toString()).append("</th>");
        }
        ret.append("</tr>");
        return ret + toRows(lst);
    }

    static public String toTable(List<Object[]> lst, String class_) {
        String ret = "<table class='" + class_ + "'>";
        return ret + toRows(lst);
    }

    static public String html(String title, String body) {
        return String.format(
                "<html><head><link rel='stylesheet' type='text/css' href='css.css'><title>%s</title></head><body>%s</body></html>",
                title, body);
    }

    static public String div(String content, String class_, String id, String style) {
        return String.format("<div class='%s' id='%s' style='%s'>%s</div>", class_, id, style, content);
    }
}
/******************* "src\tools\SaveAndLoad.java" ********************/

package tools;

import java.io.*;
import java.util.Map;

/*
 * 录入答案的保存与载入
 */
public class SaveAndLoad {
    public static boolean save(Map<String, String[]> e) {
        try {
            FileOutputStream fileOut = new FileOutputStream("ans.ser");
            ObjectOutputStream out = new ObjectOutputStream(fileOut);
            out.writeObject(AnsProcess.modifyBeforeSave(e));
            out.close();
            fileOut.close();
            return true;
        } catch (IOException i) {
            return false;
        }
    }

    public static Map<String, Object> load() {
        try {
            FileInputStream fileIn = new FileInputStream("ans.ser");
            ObjectInputStream in = new ObjectInputStream(fileIn);
            Map<String, Object> e = (Map<String, Object>) in.readObject();
            in.close();
            fileIn.close();
            return e;
        } catch (Exception e) {
            return null;
        }
    }
}

/******************* "src\tools\Student.java" ********************/

package tools;

import java.util.HashSet;
import java.util.Objects;

/*
 * 学生的数据结构，基于名字和学号具有唯一性
 */
public class Student {
    public static HashSet<Student> students = new HashSet<>();
    public String name;
    public String num;
    public int grade;

    public Student(String name, String num, int grade) {
        this.name = name;
        this.num = num;
        this.grade = grade;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o)
            return true;
        if (o == null || getClass() != o.getClass())
            return false;
        Student student = (Student) o;
        return name.equals(student.name) && num.equals(student.num);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, num);
    }

    public Object[] toArray() {
        return new Object[] { num, name, String.valueOf(grade) };
    }
}

